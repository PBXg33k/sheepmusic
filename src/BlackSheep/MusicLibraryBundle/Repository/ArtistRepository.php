<?php
namespace BlackSheep\MusicLibraryBundle\Repository;

use BlackSheep\MusicLibraryBundle\Entity\ArtistsEntity;
use Doctrine\ORM\EntityRepository;

/**
 * SongsRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArtistRepository extends EntityRepository implements ArtistRepositoryInterface
{
    /**
     * @inheritdoc
     */
    public function addOrUpdate($artistName, $musicBrainzId = null)
    {

        $artistEntity = $this->getArtistByMusicBrainzId($musicBrainzId);

        if ($artistEntity === null) {
            $artistEntity = $this->getArtistByName($artistName);
        }
        if ($artistEntity === null || ($artistEntity instanceof ArtistsEntity) === false
        ) {
            $artistEntity = ArtistsEntity::createNew($artistName, $musicBrainzId);
            $this->save($artistEntity);
        }

        return $artistEntity;
    }

    /**
     * @inheritdoc
     */
    public function save(ArtistsEntity $artistEntity)
    {
        $entityManager = $this->getEntityManager();
        $entityManager->persist($artistEntity);
        $entityManager->flush($artistEntity);
    }

    /**
     * @inheritdoc
     */
    public function getArtistByName($artistName)
    {
        return $this->findOneBy(
            ['name' => $artistName]
        );
    }

    /**
     * @inheritdoc
     */
    public function getArtistByMusicBrainzId($musicBrainzId = null)
    {
        if ($musicBrainzId !== null && $musicBrainzId !== '') {
            return $this->findOneBy(
                ['musicBrainzId' => $musicBrainzId]
            );
        }

        return null;
    }

    /**
     * @inheritdoc
     */
    public function getArtistAlbumByName($artist, $albumName)
    {
        if ($artist instanceof ArtistsEntity) {
            return $this->findOneBy(
                ['id' => $artist->getId(), 'albums.name' => $albumName]
            );
        }

        return null;
    }
}
