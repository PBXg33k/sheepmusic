<?php
namespace BlackSheep\MusicLibraryBundle\Repository;

use BlackSheep\MusicLibraryBundle\Entity\Albums;
use BlackSheep\MusicLibraryBundle\Entity\Artists;
use Doctrine\ORM\EntityRepository;

/**
 * SongsRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlbumsRepository extends EntityRepository
{
    /**
     * @param Artists $artists
     * @param         $albumName
     * @param         $extraInfo
     * @return Albums|null
     */
    public function addOrUpdateByArtistAndName(Artists $artists, $albumName, $extraInfo)
    {
        $entityManager = $this->getEntityManager();
        $album         = $this->getArtistAlbumByName($artists, $albumName);
        if ($album == null) {
            $album = Albums::createArtistAlbum($albumName, $artists, $extraInfo);
            $entityManager->persist($album);
            $entityManager->flush($album);
        }

        return $album;
    }

    /**
     * @param Artists $artist
     * @param         $albumName
     * @return null|Albums
     */
    public function getArtistAlbumByName(Artists $artist, $albumName)
    {
        return $this->findOneBy(
            ['artist' => $artist, 'name' => $albumName]
        );
    }

    /**
     * @param int $offset
     * @param int $limit
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getRecentAlbums($offset = 0, $limit = 12)
    {
        $queryBuilder = $this->createQueryBuilder('a')
            ->addOrderBy('a.createdAt',"DESC")
            ->setFirstResult($offset)
            ->setMaxResults($limit);

        return $queryBuilder->getQuery()->getResult();
    }
}
